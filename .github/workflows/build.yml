name: Full Build

on: 
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x
        dotnet-quality: 'preview'
    - name: Install SQL Local DB
      run: ./setup-sqllocaldb.ps1
      shell: pwsh
    - name: Build
      run: dotnet build QuerySpecification.sln --configuration Release
    - name: Test
      run: dotnet test QuerySpecification.sln --configuration Release --no-build --no-restore --collect:"XPlat Code Coverage"
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.3.9
      with:
        reports: 'tests/**/coverage.cobertura.xml'
        targetdir: 'TestResults'
        reporttypes: 'MarkdownSummaryGithub;Badges'
        assemblyfilters: '-*Tests*'
    - name: Publish coverage report in build summary
      run: cat TestResults/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
      shell: bash
    - name: Update Gist with coverage report
      run: |
        gh gist edit $env:GIST_ID --add TestResults/badge_combined.svg --filename badge_combined.svg
        gh gist edit $env:GIST_ID --add TestResults/SummaryGithub.md --filename SummaryGithub.md
      env:
        GH_TOKEN: ${{ secrets.GIST_TOKEN }}
        GIST_ID: ${{ secrets.GIST_ID }}
    - name: Create coverage-reports branch if doesn't exist
      run: |
          git fetch
          git switch coverage-reports || git switch --orphan coverage-reports
          git reset --hard
    - name: Move coverage report files to root
      run: cp -r TestResults/* .
    - name: Commit and push coverage report
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add -A
        git commit -m "Update coverage reports [skip ci]"
        git push origin coverage-reports --force
